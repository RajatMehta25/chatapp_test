{"version":3,"sources":["Firebase.js","components/Login.js","components/RoomList.js","components/AddRoom.js","components/ChatRoom.js","App.js","index.js"],"names":["firebase","initializeApp","projectId","apiKey","databaseURL","Login","history","useHistory","useState","nickname","creds","setCreds","showLoading","setShowLoading","ref","database","Spinner","color","Jumbotron","Form","onSubmit","e","preventDefault","orderByChild","equalTo","once","snapshot","exists","localStorage","setItem","push","set","FormGroup","Label","Input","type","name","id","placeholder","value","onChange","persist","target","Button","variant","RoomList","room","setRoom","setNickname","useEffect","a","getItem","on","resp","snapshotToArray","fetchData","returnArr","forEach","childSnapshot","item","val","key","onClick","removeItem","to","ListGroup","map","idx","ListGroupItem","action","roomname","chat","message","date","Moment","Date","format","user","find","x","undefined","update","status","newroomuser","enterChatRoom","AddRoom","Alert","goBack","ChatRoom","chats","setChats","users","setUsers","setRoomname","newchat","setNewchat","useParams","resp2","roomusers","filter","className","Container","Row","Col","xs","Card","CardBody","CardSubtitle","exitChat","InputGroup","InputGroupAddon","addonType","App","location","useLocation","pathname","state","from","path","SecureRoute","children","rest","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.32bc5e5b.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst config = {\n  projectId: \"chat-app-d374a\",\n  apiKey: \"AIzaSyAqqUNxzj7wvT3U1d-oYPQdcKN0XBCNHy8\",\n  databaseURL: \"https://chat-app-d374a-default-rtdb.firebaseio.com\",\n  };\nfirebase.initializeApp(config);\n\nexport default firebase;","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Jumbotron,\n    Spinner,\n    Form,\n    Button,\n    FormGroup, \n    Label, \n    Input\n} from 'reactstrap';\nimport firebase from '../Firebase';\n\nfunction Login() {\n    const history = useHistory();\n    const [creds, setCreds] = useState({ nickname: '' });\n    const [showLoading, setShowLoading] = useState(false);\n    const ref = firebase.database().ref('users/');\n\n    const login = (e) => {\n        e.preventDefault();\n        setShowLoading(true);\n        ref.orderByChild('nickname').equalTo(creds.nickname).once('value', snapshot => {\n            if (snapshot.exists()) {\n                localStorage.setItem('nickname', creds.nickname);\n                history.push('/roomlist');\n                setShowLoading(false);\n            } else {\n                const newUser = firebase.database().ref('users/').push();\n                newUser.set(creds);\n                localStorage.setItem('nickname', creds.nickname);\n                history.push('/roomlist');\n                setShowLoading(false);\n            }\n        });\n    };\n\n    const onChange = (e) => {\n        e.persist();\n        setCreds({...creds, [e.target.name]: e.target.value});\n    }\n\n    return (\n        <div>\n            {showLoading &&\n                <Spinner color=\"primary\" />\n            }\n            <Jumbotron>\n                <Form onSubmit={login}>\n                    <FormGroup>\n                        <Label>Nickname</Label>\n                        <Input type=\"text\" name=\"nickname\" id=\"nickname\" placeholder=\"Enter Your Nickname\" value={creds.nickname} onChange={onChange} />\n                    </FormGroup>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Login\n                    </Button>\n                </Form>\n            </Jumbotron>\n        </div>\n    );\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport {\n    Link,\n    useHistory\n  } from \"react-router-dom\";\nimport {\n    Jumbotron,\n    Spinner,\n    ListGroup,\n    ListGroupItem,\n    Button\n} from 'reactstrap';\nimport Moment from 'moment';\nimport firebase from '../Firebase';\n\nfunction RoomList() {\n    const [room, setRoom] = useState([]);\n    const [showLoading, setShowLoading] = useState(true);\n    const [nickname, setNickname] = useState('');\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setNickname(localStorage.getItem('nickname'));\n            firebase.database().ref('rooms/').on('value', resp => {\n                setRoom([]);\n                setRoom(snapshotToArray(resp));\n                setShowLoading(false);\n            });\n        };\n      \n        fetchData();\n    }, []);\n\n    const snapshotToArray = (snapshot) => {\n        const returnArr = [];\n\n        snapshot.forEach((childSnapshot) => {\n            const item = childSnapshot.val();\n            item.key = childSnapshot.key;\n            returnArr.push(item);\n        });\n\n        return returnArr;\n    }\n\n    const enterChatRoom = (roomname) => {\n        const chat = { roomname: '', nickname: '', message: '', date: '', type: '' };\n        chat.roomname = roomname;\n        chat.nickname = nickname;\n        chat.date = Moment(new Date()).format('DD/MM/YYYY HH:mm:ss');\n        chat.message = `${nickname} enter the room`;\n        chat.type = 'join';\n        const newMessage = firebase.database().ref('chats/').push();\n        newMessage.set(chat);\n\n        firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(roomname).on('value', (resp) => {\n            let roomuser = [];\n            roomuser = snapshotToArray(resp);\n            const user = roomuser.find(x => x.nickname === nickname);\n            if (user !== undefined) {\n              const userRef = firebase.database().ref('roomusers/' + user.key);\n              userRef.update({status: 'online'});\n            } else {\n              const newroomuser = { roomname: '', nickname: '', status: '' };\n              newroomuser.roomname = roomname;\n              newroomuser.nickname = nickname;\n              newroomuser.status = 'online';\n              const newRoomUser = firebase.database().ref('roomusers/').push();\n              newRoomUser.set(newroomuser);\n            }\n        });\n    \n        history.push('/chatroom/' + roomname);\n    }\n\n    const logout = () => {\n        localStorage.removeItem('nickname');\n        history.push('/login');\n    }\n\n    return (\n        <div>\n            {showLoading &&\n                <Spinner color=\"primary\" />\n            }\n            <Jumbotron>\n                <h3>{nickname} <Button onClick={() => { logout() }}>Logout</Button></h3>\n                <h2>Room List</h2>\n                <div>\n                    <Link to=\"/addroom\">Add Room</Link>\n                </div>\n                <ListGroup>\n                    {room.map((item, idx) => (\n                        <ListGroupItem key={idx} action onClick={() => { enterChatRoom(item.roomname) }}>{item.roomname}</ListGroupItem>\n                    ))}\n                </ListGroup>\n            </Jumbotron>\n        </div>\n    );\n}\n\nexport default RoomList;","import React, { useState } from 'react';\nimport {\n    useHistory\n} from \"react-router-dom\";\nimport {\n    Alert,\n    Jumbotron,\n    Spinner,\n    Form,\n    Button,\n    FormGroup, \n    Label, \n    Input\n} from 'reactstrap';\nimport firebase from '../Firebase';\n\nfunction AddRoom() {\n    const history = useHistory();\n    const [room, setRoom] = useState({ roomname: '' });\n    const [showLoading, setShowLoading] = useState(false);\n    const ref = firebase.database().ref('rooms/');\n\n    const save = (e) => {\n        e.preventDefault();\n        setShowLoading(true);\n        ref.orderByChild('roomname').equalTo(room.roomname).once('value', snapshot => {\n            if (snapshot.exists()) {\n                return (\n                    <div>\n                        <Alert color=\"primary\">\n                            Room name already exist!\n                        </Alert>\n                    </div>\n                );\n            } else {\n                const newRoom = firebase.database().ref('rooms/').push();\n                newRoom.set(room);\n                history.goBack();\n                setShowLoading(false);\n            }\n        });\n    };\n\n    const onChange = (e) => {\n        e.persist();\n        setRoom({...room, [e.target.name]: e.target.value});\n    }\n\n    return (\n        <div>\n            {showLoading &&\n                <Spinner color=\"primary\" />\n            }\n            <Jumbotron>\n                <h2>Please enter new Room</h2>\n                <Form onSubmit={save}>\n                    <FormGroup>\n                        <Label>Room Name</Label>\n                        <Input type=\"text\" name=\"roomname\" id=\"roomname\" placeholder=\"Enter Room Name\" value={room.roomname} onChange={onChange} />\n                    </FormGroup>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Add\n                    </Button>\n                </Form>\n            </Jumbotron>\n        </div>\n    );\n}\n\nexport default AddRoom;","import React, { useState, useEffect } from 'react';\nimport {\n    useHistory,\n    useParams\n  } from \"react-router-dom\";\nimport {\n    Container, \n    Row, \n    Col,\n    Card,\n    CardBody,\n    CardSubtitle,\n    Button,\n    Form,\n    InputGroup,\n    Input,\n    InputGroupAddon\n} from 'reactstrap';\nimport Moment from 'moment';\nimport firebase from '../Firebase';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport '../Styles.css';\n\nfunction ChatRoom() {\n    const [chats, setChats] = useState([]);\n    const [users, setUsers] = useState([]);\n    const [nickname, setNickname] = useState('');\n    const [roomname, setRoomname] = useState('');\n    const [newchat, setNewchat] = useState({ roomname: '', nickname: '', message: '', date: '', type: '' });\n    const history = useHistory();\n    const { room } = useParams();\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setNickname(localStorage.getItem('nickname'));\n            setRoomname(room);\n            firebase.database().ref('chats/').orderByChild('roomname').equalTo(roomname).on('value', resp => {\n              setChats([]);\n              setChats(snapshotToArray(resp));\n            });\n        };\n      \n        fetchData();\n    }, [room, roomname]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setNickname(localStorage.getItem('nickname'));\n            setRoomname(room);\n            firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(roomname).on('value', (resp2) => {\n              setUsers([]);\n              const roomusers = snapshotToArray(resp2);\n              setUsers(roomusers.filter(x => x.status === 'online'));\n            });\n        };\n      \n        fetchData();\n    }, [room, roomname]);\n\n    const snapshotToArray = (snapshot) => {\n        const returnArr = [];\n\n        snapshot.forEach((childSnapshot) => {\n            const item = childSnapshot.val();\n            item.key = childSnapshot.key;\n            returnArr.push(item);\n        });\n\n        return returnArr;\n    }\n\n    const submitMessage = (e) => {\n        e.preventDefault();\n        const chat = newchat;\n        chat.roomname = roomname;\n        chat.nickname = nickname;\n        chat.date = Moment(new Date()).format('DD/MM/YYYY HH:mm:ss');\n        chat.type = 'message';\n        const newMessage = firebase.database().ref('chats/').push();\n        newMessage.set(chat);\n        setNewchat({ roomname: '', nickname: '', message: '', date: '', type: '' });\n    };\n\n    const onChange = (e) => {\n        e.persist();\n        setNewchat({...newchat, [e.target.name]: e.target.value});\n    }\n\n    const exitChat = (e) => {\n        const chat = { roomname: '', nickname: '', message: '', date: '', type: '' };\n        chat.roomname = roomname;\n        chat.nickname = nickname;\n        chat.date = Moment(new Date()).format('DD/MM/YYYY HH:mm:ss');\n        chat.message = `${nickname} leave the room`;\n        chat.type = 'exit';\n        const newMessage = firebase.database().ref('chats/').push();\n        newMessage.set(chat);\n    \n        firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(roomname).once('value', (resp) => {\n          let roomuser = [];\n          roomuser = snapshotToArray(resp);\n          const user = roomuser.find(x => x.nickname === nickname);\n          if (user !== undefined) {\n            const userRef = firebase.database().ref('roomusers/' + user.key);\n            userRef.update({status: 'offline'});\n          }\n        });\n    \n        history.goBack();\n    }\n\n    return (\n        <div className=\"Container\">\n            <Container>\n                <Row>\n                    <Col xs=\"4\">\n                        <div>\n                            <Card className=\"UsersCard\">\n                                <CardBody>\n                                    <CardSubtitle>\n                                        <Button variant=\"primary\" type=\"button\" onClick={() => { exitChat() }}>\n                                            Exit Chat\n                                        </Button>\n                                    </CardSubtitle>\n                                </CardBody>\n                            </Card>\n                            {users.map((item, idx) => (\n                                <Card key={idx} className=\"UsersCard\">\n                                    <CardBody>\n                                        <CardSubtitle>{item.nickname}</CardSubtitle>\n                                    </CardBody>\n                                </Card>\n                            ))}\n                        </div>\n                    </Col>\n                    <Col xs=\"8\">\n                        <ScrollToBottom className=\"ChatContent\">\n                            {chats.map((item, idx) => (\n                                <div key={idx} className=\"MessageBox\">\n                                    {item.type ==='join'||item.type === 'exit'?\n                                        <div className=\"ChatStatus\">\n                                            <span className=\"ChatDate\">{item.date}</span>\n                                            <span className=\"ChatContentCenter\">{item.message}</span>\n                                        </div>:\n                                        <div className=\"ChatMessage\">\n                                            <div className={`${item.nickname === nickname? \"RightBubble\":\"LeftBubble\"}`}>\n                                            {item.nickname === nickname ? \n                                                <span className=\"MsgName\">Me</span>:<span className=\"MsgName\">{item.nickname}</span>\n                                            }\n                                            <span className=\"MsgDate\"> at {item.date}</span>\n                                            <p>{item.message}</p>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            ))}\n                        </ScrollToBottom>\n                        <footer className=\"StickyFooter\">\n                            <Form className=\"MessageForm\" onSubmit={submitMessage}>\n                                <InputGroup>\n                                <Input type=\"text\" name=\"message\" id=\"message\" placeholder=\"Enter message here\" value={newchat.message} onChange={onChange} />\n                                    <InputGroupAddon addonType=\"append\">\n                                        <Button variant=\"primary\" type=\"submit\">Send</Button>\n                                    </InputGroupAddon>\n                                </InputGroup>\n                            </Form>\n                        </footer>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default ChatRoom;","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useLocation\n} from \"react-router-dom\";\nimport Login from './components/Login';\nimport RoomList from './components/RoomList';\nimport AddRoom from './components/AddRoom';\nimport ChatRoom from './components/ChatRoom';\n\nfunction App() {\n  let location = useLocation();\n\n  return (\n    <Router>\n      <div>\n        <Redirect\n          to={{\n            pathname: \"/roomlist\",\n            state: { from: location }\n          }}\n        />\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <SecureRoute path=\"/roomlist\">\n            <RoomList />\n          </SecureRoute>\n          <SecureRoute path=\"/addroom\">\n            <AddRoom />\n          </SecureRoute>\n          <SecureRoute path=\"/chatroom/:room\">\n            <ChatRoom />\n          </SecureRoute>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\nfunction SecureRoute({ children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        localStorage.getItem('nickname') ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}